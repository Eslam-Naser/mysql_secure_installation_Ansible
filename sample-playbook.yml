---
# Sample Playbook to install MySQL & use "mysql_secure_installation" Ansible Module

- name: Install & Secure MySQL
  hosts: db_servers
  user: root
  become: true
  vars:
      RedHat_Packages:
        - gcc
        - mysql-devel  #  Alternative (NOT Tested) -- yum install mariadb-devel
        - mariadb-server
        - mariadb
      RedHat_8_Extra_Packages:
        - python3-pip
        - python3-devel
      Ubuntu_Packages:
        - mariadb-server
        - python-dev
        - libmysqlclient-dev
        - gcc
      Ubuntu_8_Extra_Packages:
        - python3-pip
        - python3-dev
      Mariadb_Service: "{{ 'mariadb' if ansible_os_family == 'RedHat' else 'mysql'}}"

  tasks:
    - name: Update apt packages
      become: true
      apt:
        upgrade: no
        update_cache: yes
        cache_valid_time: 86400 #One day
      when: ansible_os_family == 'Debian' and ansible_distribution_major_version == '20'

    - name: Install python2
      package:
        name: python2
        state: present

    - name: Install Mariadb and its Dependencies On Ubuntu or Centos
      package:
        name: "{{ RedHat_Packages if ansible_os_family == 'RedHat' else Ubuntu_Packages }}"
        state: present

    - name: Install python2-devel on Redhat OS Family
      yum:
        name: 'python2-devel'
        state: present
      when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '8'

    - name: Install python-devel on Redhat OS Family
      yum:
        name: 'python-devel'
        state: present
      when: ansible_os_family == 'RedHat' and ansible_distribution_major_version < '8'

    - name: Install Extra Package for Redhat OS Family
      yum:
        name: "{{ RedHat_8_Extra_Packages }}"
        state: present
      when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '8'

    - name: Install Extra Package for Debian OS Family
      apt:
        name: "{{ Ubuntu_8_Extra_Packages }}"
        state: present
      when: ansible_os_family == ansible_os_family == 'Debian' and ansible_distribution_major_version == '20'

    - name: Pip Install "mysqlclient" Package for Redhat OS Family
      pip:
        name: mysqlclient
        executable: pip3
      when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '8'

    - name: Create directory "/usr/include/mysql" (workaround for a bug)
      file:
        path: /usr/include/mysql/
        state: directory
        mode: '0755'
      when: ansible_os_family == 'Debian' or 'RedHat'

    - name: download mysql.h (workaround for a bug)
      get_url:
        url: https://raw.githubusercontent.com/paulfitz/mysql-connector-c/master/include/my_config.h
        dest: /usr/include/mysql/my_config.h
        mode: '0440'
      when: ansible_os_family == 'Debian' or 'RedHat'

    - name: Start Mysql Service
      service:
        name: "{{ Mariadb_Service }}"
        state: started
        enabled: true


    ### In Case you need to install pip2 ###

    - name: Download get-pip.py (Testing ...)
      get_url:
        url: https://bootstrap.pypa.io/get-pip.py # --output get-pip.py
        dest: /tmp/get-pip.py
        mode: '0440'

    - name: Installing pip2 (Testing ...)
      command: python2 /tmp/get-pip.py

    - name: Install the MySQL-Python Library
      pip:
        name: MySQL-python
        executable: pip2.7

    - name: use "mysql_secure_installation" for Fresh MySQL Installation
      mysql_secure_installation:
        login_password: ''
        new_password: password22
        user: root
        login_host: localhost
        hosts: ['localhost', '127.0.0.1', '::1']
        change_root_password: true
        remove_anonymous_user: true
        disallow_root_login_remotely: true
        remove_test_db: true
      register: secure

    - debug:
        var: secure
